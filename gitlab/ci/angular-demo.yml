build-demo-app:
  extends: .build-angular
  rules:
    - if: '$CI_COMMIT_TAG =~ /^demo-70\d{2}-?.*$/i'
      when: always
  script:
    - DEMO_PORT=$(echo $CI_COMMIT_TAG | sed -rn 's/^demo-(70[0-9]{2})-?.*/\1/gip')
    - if [ -z "$DEMO_PORT" ] ; then echo "Demo port does not meet specification [7000-7099]" ; exit 1 ;  fi
    - echo "Building demo for port $DEMO_PORT..."
    - npm run build:demo:lite

build-demo:
  extends: .docker-build-template
  dependencies:
    - build-demo-app
  rules:
    - if: '$CI_COMMIT_TAG =~ /^demo-70\d{2}-?.*$/i && $CI_COMMIT_BRANCH == null'
      when: always
  variables:
    DOCKER_TAG: $CI_COMMIT_SHORT_SHA

deploy-demo:
  stage: deploy
  dependencies:
    - build-demo
  tags:
    - docker-host
  rules:
    - if: '$CI_COMMIT_TAG =~ /^demo-70\d{2}-?.*$/i && $CI_COMMIT_BRANCH == null'
      when: always
  script:
    - DEMO_PORT=$(echo $CI_COMMIT_TAG | sed -rn 's/^demo-(70[0-9]{2})-?.*/\1/gip')
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker container ls --quiet --all --filter "label=aex.demo-port=$DEMO_PORT" | xargs --no-run-if-empty docker rm -f
    - docker images --quiet --filter "dangling=true" --filter reference="$CI_REGISTRY_IMAGE:*" | xargs --no-run-if-empty docker rmi
    - docker run --restart unless-stopped --label aex.demo-port=$DEMO_PORT -d -p $DEMO_PORT:80 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
